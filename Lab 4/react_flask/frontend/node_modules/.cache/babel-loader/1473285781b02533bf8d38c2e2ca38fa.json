{"ast":null,"code":"var _jsxFileName = \"/home/vince/Documents/Code/idd/Interactive-Lab-Hub/Lab 4/react_flask/frontend/src/App.js\";\nimport React, { useEffect, useRef, useState, Fragment } from \"react\";\nimport \"./App.css\";\nimport { Input, Button, Container, Row } from \"reactstrap\";\nimport ml5 from \"ml5\";\nimport P5 from \"p5\";\nimport useInterval from '@use-it/interval'; // import P5Wrapper from 'react-p5-wrapper';\n\nlet classifier;\nlet modelURL = 'https://teachablemachine.withgoogle.com/models/RmpzfNMxd/';\n\nfunction App() {\n  const audioRef = useRef();\n  const [start, setStart] = useState(false);\n  const [result, setResult] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const serverUrl = \"http://localhost:5000\";\n  useEffect(() => {\n    classifier = ml5.soundClassifier(modelURL + 'model.json', () => {\n      navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: true\n      }).then(stream => {\n        audioRef.current.srcObject = stream;\n        audioRef.current.play();\n        setLoaded(true);\n      });\n    });\n  }, []);\n  useInterval(() => {\n    if (classifier && start) {\n      classifier.classify(audioRef.current, (error, results) => {\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        setResult(results); // POST HERE\n\n        let urlToFetch = serverUrl + \"/update/\" + 1 + \"/\" + results[0].label + \"/\" + results[0].confidence;\n        fetch(urlToFetch, {\n          method: \"POST\"\n        }).then(response => {\n          return response.json().then(object => {// setState({\n            //   entries: Object.entries(object),\n            // });\n          });\n        }); // console.log(\"update running\");\n\n        console.log(results[0].label);\n      });\n    }\n  }, 500);\n\n  const toggle = () => {\n    setStart(!start);\n    setResult([]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"capture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: audioRef,\n    style: {\n      transform: \"scale(-1, 1)\"\n    },\n    width: \"300\",\n    height: \"150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), loaded && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, start ? \"Stop\" : \"Start\")), result.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }\n  }, Object.values(result[0]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }\n  }), Object.values(result[1]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 18\n    }\n  }), Object.values(result[2]))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vince/Documents/Code/idd/Interactive-Lab-Hub/Lab 4/react_flask/frontend/src/App.js"],"names":["React","useEffect","useRef","useState","Fragment","Input","Button","Container","Row","ml5","P5","useInterval","classifier","modelURL","App","audioRef","start","setStart","result","setResult","loaded","setLoaded","serverUrl","soundClassifier","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","play","classify","error","results","console","urlToFetch","label","confidence","fetch","method","response","json","object","log","toggle","transform","length","Object","values"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState, Fragment} from \"react\";\nimport \"./App.css\";\nimport { Input, Button, Container, Row } from \"reactstrap\";\nimport ml5 from \"ml5\"\nimport P5 from \"p5\"\nimport useInterval from '@use-it/interval';\n// import P5Wrapper from 'react-p5-wrapper';\nlet classifier;\nlet modelURL = 'https://teachablemachine.withgoogle.com/models/RmpzfNMxd/';\n\nfunction App() {\n  const audioRef = useRef();\n  const [start, setStart] = useState(false);\n  const [result, setResult] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const serverUrl = \"http://localhost:5000\";\n\n  useEffect(() => {\n    classifier = ml5.soundClassifier(modelURL+'model.json', () => {\n      navigator.mediaDevices\n        .getUserMedia({ video: false, audio: true })\n        .then((stream) => {\n          audioRef.current.srcObject = stream;\n          audioRef.current.play();\n          setLoaded(true);\n        });\n    });\n  }, []);\n\n  useInterval(() => {\n    if (classifier && start) {\n      classifier.classify(audioRef.current, (error, results) => {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        setResult(results);\n        // POST HERE\n        let urlToFetch = serverUrl + \"/update/\" + 1 + \"/\" + results[0].label + \"/\" + results[0].confidence;\n        fetch(urlToFetch, { method: \"POST\", }).then((response) => {\n          return response.json().then((object) => {\n            // setState({\n            //   entries: Object.entries(object),\n            // });\n          });\n        });\n        // console.log(\"update running\");\n        console.log(results[0].label)\n      });\n    }\n  }, 500);\n\n  const toggle = () => {\n    setStart(!start);\n    setResult([]);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"upper\">\n        <div className=\"capture\">\n          <video\n            ref={audioRef}\n            style={{ transform: \"scale(-1, 1)\" }}\n            width=\"300\"\n            height=\"150\"\n          />\n          {loaded && (\n            <button onClick={() => toggle()}>\n              {start ? \"Stop\" : \"Start\"}\n            </button>\n          )}\n        </div>\n        {result.length > 0 && (\n          <div>\n            <ul>\n               <span>\n                 {Object.values(result[0])}\n                 <br></br>\n                 {Object.values(result[1])}\n                 <br></br>\n                 {Object.values(result[2])}\n               </span>\n         </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}