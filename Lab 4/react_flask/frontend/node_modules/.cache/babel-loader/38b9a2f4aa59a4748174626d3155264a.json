{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar react = require('react');\n\nvar useInterval = function useInterval(callback, delay) {\n  var savedCallbackRef = react.useRef();\n  react.useEffect(function () {\n    savedCallbackRef.current = callback;\n  }, [callback]);\n  react.useEffect(function () {\n    var handler = function handler() {\n      return savedCallbackRef.current.apply(savedCallbackRef, arguments);\n    };\n\n    if (delay !== null) {\n      var intervalId = setInterval(handler, delay);\n      return function () {\n        return clearInterval(intervalId);\n      };\n    }\n  }, [delay]);\n};\n\nexports.default = useInterval;","map":{"version":3,"sources":["../src/index.tsx"],"names":["useInterval","savedCallbackRef","useRef","useEffect","handler","delay","intervalId","setInterval","clearInterval"],"mappings":";;;;;;;;AAKA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,QAAA,EAAA,KAAA,EAAA;AAClB,MAAMC,gBAAgB,GAAGC,KAAAA,CAAzB,MAAyBA,EAAzB;AAEAC,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACRF,IAAAA,gBAAgB,CAAhBA,OAAAA,GAAAA,QAAAA;AADO,GAATE,EAEG,CAFHA,QAEG,CAFHA;AAIAA,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAA;AACR,QAAMC,OAAO,GAAG,SAAVA,OAAU,GAAA;AAAA,aAAoBH,gBAAgB,CAAhBA,OAAAA,CAAAA,KAAAA,CAAAA,gBAAAA,EAApB,SAAoBA,CAApB;AAAhB,KAAA;;AAEA,QAAII,KAAK,KAAT,IAAA,EAAoB;AAClB,UAAMC,UAAU,GAAGC,WAAW,CAAA,OAAA,EAA9B,KAA8B,CAA9B;AACA,aAAO,YAAA;AAAA,eAAMC,aAAa,CAAnB,UAAmB,CAAnB;AAAP,OAAA;AACD;AANM,GAATL,EAOG,CAPHA,KAOG,CAPHA;AAPF,CAAA","sourcesContent":["import { useEffect, useRef } from 'react';\n\ntype Delay = number | null;\ntype TimerHandler = (...args: any[]) => void;\n\nconst useInterval = (callback: TimerHandler, delay: Delay) => {\n  const savedCallbackRef = useRef<TimerHandler>();\n\n  useEffect(() => {\n    savedCallbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const handler = (...args: any[]) => savedCallbackRef.current!(...args);\n\n    if (delay !== null) {\n      const intervalId = setInterval(handler, delay);\n      return () => clearInterval(intervalId);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n"]},"metadata":{},"sourceType":"script"}